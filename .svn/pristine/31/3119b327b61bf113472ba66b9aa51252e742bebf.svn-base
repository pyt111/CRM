<template>
    <div class="login-container" style="margin: 0px;overflow: hidden;">
    <!-- <div id="canvascontainer" ref='can'></div> -->

    <Form ref="loginForm" autoComplete="on" :model="loginForm" :rules="loginRules"  class="card-box login-form">
        <Form-item prop="email">
            <Input type="text" v-model="loginForm.email" placeholder="Username" autoComplete="on">
                <Icon type="ios-person-outline" slot="prepend" ></Icon>
            </Input>
        </Form-item>
        <Form-item prop="password">
            <Input type="password" v-model="loginForm.password" placeholder="Password" @keyup.enter.native="handleLogin">
                <Icon type="ios-locked-outline" slot="prepend"></Icon>
            </Input>
        </Form-item>
        <Form-item>
            <Button class="button" type="primary" @click="handleLogin('loginForm')" long>登录</Button>
        </Form-item>
        <!-- <div class='tips'>admins,editor,financial,salesman，agent@wz.com 密码123456</div>
        <div class='tips'>老板，部门经理，理财师，业务员,经销商</div> -->
    </Form>

    </div>
</template>

<script>
import { phoneCase } from "utils/validate";
export default {
  name: "login",
  data() {
    const validateEmail = (rule, value, callback) => {
      // console.log(rule, value);
      if (!phoneCase(value)) {
        callback(new Error("请输入正确格式手机号码"));
      } else {
        callback();
      }
    };
    const validatePass = (rule, value, callback) => {
      if (value.length < 6) {
        callback(new Error("密码不能小于6位"));
      } else {
        callback();
      }
    };
    return {
      loginForm: {
        email: "15821682178",
        password: "qwe123"
      },
      loginRules: {
        email: [{ required: true, trigger: "blur", validator: validateEmail }],
        password: [{ required: true, trigger: "blur", validator: validatePass }]
      },
      loading: false,
      showDialog: false
    };
  },
  mounted() {
    // 
  },
  methods: {
    handleLogin() {
      this.$refs.loginForm.validate(valid => {
        if (valid) {
          this.loading = true;
          this.$store
            .dispatch("LoginByEmail", this.loginForm)
            .then(() => {
              this.$Message.success("登录成功");
              this.loading = false;
              this.$router.push({ path: "/" });
            })
            .catch(err => {
              this.$message.error(err);
              this.loading = false;
            });
        } else {
          console.log("error submit!!");
          return false;
        }
      });
    },
    afterQRScan() {
    }
  },
  init() {},
  destroyed() {
    // window.removeEventListener('hashchange', this.afterQRScan);
  }
};


</script>
<style>
.login-container a {
  color: #0078de;
}
.login-container input{
    height: 40px !important;
  }
</style>

<style rel="stylesheet/scss" lang="scss">
.tips {
  font-size: 14px;
  margin-bottom: 5px;

}
.login-container {
  height: 100vh;
  background-color: #ffffff;
  
  background-image: url(../../../static/img/bgimg3.jpg);
  input:-webkit-autofill {
    -webkit-box-shadow: 0 0 0px 1000px #fff inset !important;
    -webkit-text-fill-color: #000 !important;
  }
  input {
    background-color: #fff;
    // border: 1px solid #2d8cf0;
    -webkit-appearance: none;
    border-radius: 3px;
    padding: 12px 5px 12px 15px;
    height: 36px;
    color:#000;
  }
  
  .login-form {
    position: absolute;
    left: 0;
    top:150px;
    right: 0;
    width: 300px;
    padding: 35px 35px 15px 35px;
    margin: 120px auto;
    color:#000;
    background-color: #fff;
  }
  button{
    width: 80%;
    margin-left: 10%;
  }
}
</style>
