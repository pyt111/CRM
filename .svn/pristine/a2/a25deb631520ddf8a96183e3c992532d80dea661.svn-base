<template>
	<div class="zhan_mian">
		<div ref="mian" >
			<Row>
                <Col :span="4" >    
					<span>手机号：</span>
					<Input v-model="phone" placeholder="请输入..." style="width: 100px" size="small" @on-enter="check"></Input>				
				</Col>
                <Col :span="12">  
                    <span>时间搜索：</span>
                    <DatePicker type="daterange" 
					:v-model="options1" 
					:options="options2" 
					size="small" 
					placement="bottom-start" 
					placeholder="请选择日期" 
					style="width: 200px"
					format="yyyy-MM-dd"
					@on-change="dataChange"></DatePicker>	
					<Button type="info" size="small" icon="ios-search" @click="check">搜索</Button>																				
				</Col>
			</Row>
			<Row>
				<Col :span="2" style="margin-top:20px;">					
					<div class="search" style="width:60px">
						<Button  @click="baobei">     
							<Icon type="document-text" color="#2db7f5"></Icon>
							<span>报备</span>
						</Button> 
					</div>																
				</Col>
			</Row>
			
			<Row class="table" >		
				<Col :span="24">
					<Table  :columns="columns1"  :data="data1" ref='table' @on-selection-change='selChange'></Table>
					<div style="position:absolute;top:0px;width:100%;height:100%;display: flex;
									align-items: center;
									justify-content: center;background: rgba(210, 216, 222, 0.5);" v-if="loading">
						<Spin size="large"></Spin>
						<h6 style="color:#2d8cf0;margin-top:10px;">正在获取数据...</h6>
					</div>
				</Col>
				<Col :span="8" style="margin-top: 10px;"  class="page">	
                    <p >共{{total}}记录，每页显示{{pageSize}}条，共{{Math.ceil(total/pageSize)}}页</p>		
                </Col>
                <Col :span="16" class="pageP" style="text-align: right;margin-top: 10px;" >		  
				<!-- @on-change="setInitPage" -->
					<Page :total="total" 
					    :current="pageNum" 
						show-sizer show-elevator 
						:page-size-opts="array"
						:page-size="pageSize"
						@on-change="changepage"
						@on-page-size-change="pageChange" >
					</Page>
                </Col>
			</Row>
			<!-- 模块框 -->
			 <!-- 2未注册用户报备 -->
        <Modal v-model="modal2" width="360" :styles="{top: '200px'}" :mask-closable="false">
              <p slot="header" style="color:#2db7f5">
                <span>未注册用户报备</span>
              </p>
              <Form  label-position="top" ref="formCustom" :model="formCustom" :rules="ruleCustom3">
                <div>
                  <Row :gutter="16">
                    <Col span="12">
                      <FormItem label="手机号码：" prop="userName">
                        <Input size="small" v-model="formCustom.userName"></Input>
                      </FormItem>
                    </Col>
                    <Col span="12">
                      <FormItem label="登录密码：" prop="passWord">
                        <Input size="small" v-model="formCustom.passWord"></Input>
                      </FormItem>
                    </Col>
                    <Col span="12">
                      <FormItem label="验证码" prop="userNameCode">
                        <Input size="small" v-model="formCustom.userNameCode"></Input>
                      </FormItem>
                    </Col>
                    <Col span="12">
                      <FormItem label=" ">
                          <Button type="info" v-show="Code" @click="authCode">发送验证码</Button>
                          <Button  v-show="!Code">{{count}}s后重新发送</Button>
                      </FormItem>
                    </Col>
                    <Col span="24">
                      <FormItem label="真实姓名" prop="trueName">
                        <Input size="small" v-model="formCustom.trueName"></Input>
                      </FormItem>
                    </Col>
                    <Col span="24">
                      <FormItem label="身份证验证" prop="IDCard">
                        <Input size="small" v-model="formCustom.IDCard"></Input>
                      </FormItem>
                    </Col>
                  </Row>
                  <Row style="text-align:center;margin-bottom:-30px">
                    <Col span="24" >
                      <FormItem>
                        <Button type="primary" @click="quickBaobei('formCustom')">确定</Button>
                        <Button type="ghost" @click="quickReset('formCustom')" style="margin-left: 8px">取消</Button>
                      </FormItem>
                    </Col>
                  </Row>
                </div>
              </Form>
            <div slot="footer" style="display:none">
            </div>
        </Modal>
		</div>
	</div>
</template>


<script>
	// import axios from 'axios';
	export default {
		data() {
			return {
                loading:false,
                branch:'',
				addr:'',
				options1:'',
				// 电话
				phone:'',
				startTime:'',
				endTime:'',
				// 报备
				modal2:false,
				userId: "",
				IsAgentId: "ererewe",
				formCustom: {
					userName: "",
					passWord: "",
					userNameCode: "",
					trueName: "",
					IDCard: ""
				},
				// 快速报备验证
				ruleCustom3:{
					userName: [
					{ required: true, message: "输入框不能为空", trigger: "blur" },
					{
						type: "string",
						pattern: /^0?1[3|4|5|8][0-9]\d{8}$/,
						message: "请输入正确的手机号",
						trigger: "blur"
					}
					],
					passWord: [
					{ required: true, message: "输入框不能为空", trigger: "blur" },
					],
					userNameCode: [{ required: true, message: "输入框不能为空", trigger: "blur" }],
					trueName: [{ required: true, message: "输入框不能为空", trigger: "blur" }],
					IDCard: [
					{ required: true, message: "输入框不能为空", trigger: "blur" },
					{
						type: "string",
						pattern: /(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/,
						message: "请输入正确的身份证号",
						trigger: "blur"
					}
					]
				},
				Code:true,
				count:'',
				timer: null,
				pageNum:1,
				pageSize:12,
                valueDate:'',
				selItem:[],
				ajaxHistoryData:[],
                array:[12,14,18],
                // 初始化信息总条数
				total:0, 
				ruleCustom: {
                    one: [
						{  required: true, message: '输入框不能为空', trigger: 'blur'},
						{ type: 'string',pattern:/^0?1[3|4|5|8][0-9]\d{8}$/, message:'请输入正确的手机号', trigger:'blur'},
					],
					two: [ 
                        {  required: true, message: '输入框不能为空', trigger: 'blur'},
						{ type: 'string',pattern:/^[a-zA-Z0-9]{6,10}$/, message:'只能输入', trigger:'blur'},
					
					],
					three: [
                        {  required: true, message: '输入框不能为空', trigger: 'blur'}
					],
					five: [
                        {  required: true, message: '输入框不能为空', trigger: 'blur'}
					],
					six: [
						{ required: true, message: '输入框不能为空', trigger: 'blur' },
						{ type: 'string',pattern:/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/, message:'请输入正确的身份证号', trigger:'blur'},
                    ],
				},
				options2: {
                    shortcuts: [
                        {
                            text: '周',
                            value () {
                                const end = new Date();
                                const start = new Date();
                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 7);
                                return [start, end];
                            }
                        },
                        {
                            text: '月',
                            value () {
                                const end = new Date();
                                const start = new Date();
                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 30);
                                return [start, end];
                            }
                        },
                        {
                            text: '季',
                            value () {
                                const end = new Date();
                                const start = new Date();
                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 90);
                                return [start, end];
                            }
                        },
                        {
                            text: '年',
                            value () {
                                const end = new Date();
                                const start = new Date();
                                start.setTime(start.getTime() - 3600 * 1000 * 24 * 360);
                                return [start, end];
                            }
                        }
                    ]
                },
				columns1: [
				{
					title: '姓名',
					key: 'userName',
					align: 'center',
                    sortable: true
				}, {
					title: '手机号',
					key: 'userPhone',
					align: 'center',
					width:'120px',
                    sortable: true
				},{
					title: '等级',
					key: 'parentLevel',
                    align: 'center',
                    sortable: true
				}, {
					title: '冻结金额',
					key: 'freezeMoney',
                    align: 'center',
                    sortable: true
				}, {
					title: '投资笔数',
					key: 'frequencyInvestment',
                    align: 'center',
                    sortable: true
				}, {
					title: '提成贡献',
					key: 'contribution',
                    align: 'center',
                    sortable: true
				},{
					title: '注册时间',
					key: 'createTime',
					align: 'center',
					width:'150px'
				},{
					title: '备注',
					key: 'discribe',
					align: 'center',
				},{
					title: '操作',
					key: 'action',
					width: 150,
					align:'center',
					render: (h, params) => {
						return h('div',[
								 h('Dropdown',{
									 placement:'bottom-end',
									 style:{
										 align:'left'
									 }
								 },[
									 h('i',{
										 
										 class:{
											'auditmanage_shezhi':true,
											'icon':true,
											'ivu-icon':true,
											'ivu-icon-gear-b':true
										 }
									 }),
                                     h('DropdownMenu',{
										  slot:"list"
									 },[
										h('DropdownItem',{
											 nativeOn:{
												 click:()=>{
													 this.first(params.index)
												 }
											 }
										 },[
											 h('Icon',{
												 props:{
                                                    type:'android-locate'
												 },
												 style:{
													 marginRight:'5px',
													 color:'#69BEE9'
												 }
											 }),
											 h('span','投资跟踪')
										 ]),
									 ])
								 ])
								
						])
					}
				}],
				// page_data1: [],
				data1:[],
				page:1　　　　　　　　
			}
		},
		methods: {
			selChange(sel){
                    this.selItem = sel;
			},
			check(){
				if(this.pageNum != 1){
					this.pageNum = 1;
				}
				this.Axios()
			},
			dataChange(event){
				this.options1 = event
				this.startTime = event[0]
				this.endTime = event[1]
				this.Axios()
				// console.log('111111111111111111'+event[0])
			},
			enter(){
                console.log(123)
			},
			Axios(){
					let data = {
						// agentId:this.$store.getters.uid,
						agentId:this.$store.getters.uid,
						pageNum:this.pageNum,
						phone:this.phone,
						startTime:this.startTime,
						endTime:this.endTime,
						pageSize:this.pageSize
					}
                    this.loading = true;			
					this.post(BASE_URL +'/Agent/UserManage/v1/userMessageList',
					data
					).then(reponse=>{
						console.log(reponse);
						this.loading = false;
						var res = reponse.result
						if(res != null) {
							this.data1 = res.list;
							this.total = res.total;
							
						}
						//this.$Message.success(reponse.message)
					})
			},
			first(index){
				// console.log(this.data1)
				this.$router.push({
					 name: '投资统计', 
					 params: { userPhone: this.data1[index].userPhone}
				})
			},
			changepage(index){
				this.pageNum = index
				this.Axios()
			},
			pageChange(index){
				this.pageSize = index
				this.Axios()
			},
			// 报备
			baobei(){
             this.modal2= true
			},
			 // 快速报备接口
			BaobeiAxios() {
			//  console.log(this.IsAgentId)
			let data = {
				// agentId:this.$store.getters.uid,
				phone: this.phone,
				userName: this.formCustom.userName,
				passWord: this.formCustom.passWord,
				userNameCode: this.formCustom.userNameCode,
				trueName: this.formCustom.trueName,
				IDCard: this.formCustom.IDCard,
				userId: this.userId,
				IsAgentId: this.IsAgentId
			};
			// console.log(data.IsAgentId)
			this.loading = true;
			this.post(BASE_URL  +"/agent/agentReport", data).then(
				reponse => {
				console.log(decrypt(reponse.data));
				this.loading = false;
				let res = decrypt(reponse.data);
				console.log(res.code);
				
					// this.$Message.info(res.message);
					this.modal2 = false;
				
					// this.$Message.info(res.message);
				
				
				this.$message.info(reponse.data.message)
				}
			).catch(err => {
				console.log(err);
				this.$Message.error(err.message)
			});
			},
			// 快速报备发送短信接口
			BaobeiAxiosMsg() {
			//  console.log(this.formCustom.userName)
			let data = {
				userAccount: this.formCustom.userName
			};
			this.loading = true;
			this.post(BASE_URL  +"/agent/getAgentSms", data).then(
				reponse => {
				// console.log(decrypt(reponse.data));
				this.loading = false;
				// let res = decrypt(reponse.data);
				console.log(reponse.code);
				this.$Message.info(reponse.message);
				}
			);
			},
			// 确定快速请求
			quickBaobei(name) {
				console.log(name);
				if(this.formCustom.userName==''||this.formCustom.passWord==''||this.formCustom.userNameCode==''||this.formCustom.IDCard==''||this.formCustom.trueName==''){
						this.$Message.info('输入框不能为空');
				}else{
						this.BaobeiAxios();
						this.modal2 = false;
						this.Code = true;
						this.$refs[name].resetFields();
				}
			},
			quickReset(name) {
			this.modal2 = true;
			this.$refs[name].resetFields();
			},
			// 发送验证码
			authCode() {
				// console.log(this.formCustom.userName)
				if(this.formCustom.userName ==''){
					this.$Message.info('请输入电话号码');
				}else{
					this.BaobeiAxiosMsg();
					const TIME_COUNT = 59;
					if (!this.timer) {
					this.count = TIME_COUNT;
					this.Code = false;
					this.timer = setInterval(() => {
						if (this.count > 0 && this.count <= TIME_COUNT) {
						this.count--;
						} else {
						this.Code = true;
						clearInterval(this.timer);
						this.timer = null;
						}
					}, 1000);					
				}
			}
			
			},
		},
		mounted(){	
				this.Axios()
				
		}

	}
</script>

<style scoped>
    
   .page{
       height: 40px;
	   
   }
   .page p{
       border-left: 3px solid #2db7f5;
       height: 20px;
       margin-top: 10px;
       padding-left: 10px;
   }
  
	/* 头部 */
	.table{
		margin-top: 30px;
	}
	.search{
		float: left;
	}
	.cursor{
		cursor: pointer;
	}
	.check{
		float: left;
		margin-left: 20px;
	}
    .delete{
		margin-left: 20px;
	}
	.zhan_mian{
		border-top: 3px solid #48A2FE; 
		background-color: #ffffff;
		padding: 20px;
		border-radius: 5px;
	}
	.modal1_zhu{
        border-radius:5px;
		height:30px;
		line-height:30px;
		background-color:#40A9FF;
		color:#ffffff
	}
</style>
<style>
body,
	html {
	width: 100%;
	height: 100%;
	background-color: #EDEEF2;
	}
   .pageP .ivu-select-dropdown {
    width: inherit;
    max-height: 200px;
    overflow: auto;
    margin: 5px 0;
    padding: 5px 0;
    background-color: #ffffff;
    box-sizing: border-box;
    border-radius: 4px;
    box-shadow: 0 1px 6px rgba(0,0,0,.2);
    position: absolute;
    z-index: 900;
	top:-110px !important
}
.auditmanage_shezhi{
		font-size:16px
	}

	.auditmanage_shezhi:hover{
		color: #FE8320
	}
</style>

